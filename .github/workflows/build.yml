name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v\d+\.\d+\.\d+'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release:
        description: 'Build and release'
        required: true
        type: boolean
      prerelease:
        description: 'Is pre-release'
        required: true
        type: boolean
      draft:
        description: 'Is draft'
        required: true
        type: boolean

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}

    needs: golangci

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0 || echo 'v0.0.0')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build binary
        run: |
          BINARY_NAME=bgm-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags "-X 'github.com/iucario/bangumi-go/cmd.Version=${{ steps.get_tag.outputs.tag }}'" -o $BINARY_NAME
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bgm-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          path: bgm-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          retention-days: 7

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0 || echo 'v0.0.0')
          echo "tag=$tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          pattern: bgm-*
          merge-multiple: true
      - run: ls -R release-assets

      - name: List downloaded files
        run: ls -R release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: release-assets/**/*
